{"version":3,"sources":["config/store.js","config/api.js","services/auth_services.js","components/auth/Login.js","components/auth/Register.js","components/auth/Logout.js","components/common/Header.js","services/activity_services.js","components/activities/Activity.js","components/activities/NewActivity.js","components/activities/Activities.js","services/student_services.js","components/students/StudentCard.js","components/students/AddStudentCard.js","components/students/Students.js","components/common/Landing.js","config/state_reducer.js","index.js","App.js"],"names":["StateContext","createContext","useGlobalState","useContext","axios","create","baseURL","withCredentials","timeout","userData","a","api","post","response","data","console","log","get","getLoggedInUser","localStorage","getItem","setLoggedInUser","user","setItem","removeItem","showLogin","setShowLogin","setActivities","setStudents","dispatch","useState","loginError","setLoginError","history","useHistory","hideModal","toggle","isOpen","color","id","onSubmit","event","preventDefault","form","target","loginUser","username","value","password","then","activities","students","type","push","catch","error","icon","size","name","label","required","data-cy","onClick","showRegister","setShowRegister","registrationError","setRegistrationError","confirm","registerUser","showLogout","setShowLogout","logout","logoutUser","setIsOpen","loggedInUser","store","pageTitle","location","pathname","style","backgroundColor","light","expand","center","navbar","left","to","right","Login","Register","Logout","getAllActivities","submitNewActivity","deleteActivity","delete","assetListOpen","setAssetListOpen","className","display","width","textContent","date","Date","getDate","getMonth","getFullYear","assets","length","alignItems","marginLeft","fontSize","marginBottom","map","asset","i","key","href","rel","flexDirection","justifyContent","flexWrap","student_id","studentRecord","find","student","_id","pill","deleteId","filter","activity","setShowNewActivityModal","setAssets","studentsToInclude","setStudentsToInclude","fullHeight","position","details","completed","addNewActivity","marginTop","onSelect","onRemove","options","displayValue","searchBox","border","borderBottom","borderRadius","_ass","parentNode","iconSize","onIconClick","assetInput","document","getElementById","showNewActivityModal","customDateFrom","setCustomDateFrom","customDateTo","setCustomDateTo","selectedStudent","setSelectedStudent","showCustomDateSelection","setShowCustomDateSelection","filterMethod","setFilterMethod","useEffect","selectableStudentList","padding","placeholder","singleSelect","chips","margin","studentPicker","onChange","activitiesMatchingCriteria","today","filterActivitiesByToday","filterActivitiesByThisWeek","indexOf","Activity","showActivities","bottom","height","NewActivity","getStudents","addStudent","deleteStudent","studentId","minWidth","readOnly","maxWidth","marginRight","gradient","st","reset","StudentCard","AddStudentCard","title","src","state","action","ReactDOM","render","useReducer","stateReducer","userAuthenticated","Provider","path","Header","exact","Activities","Students","Landing"],"mappings":"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","file":"static/js/main.75f03a46.chunk.js","sourcesContent":["import {createContext, useContext} from \"react\"\n\n// the context object\nexport const StateContext = createContext()\n\n// a custom hook that wraps useContext\nexport const useGlobalState = () => useContext(StateContext);\n","import axios from \"axios\";\n\nexport default axios.create({\n//     baseURL: \"http://localhost:3030/API/\",\n    baseURL: \"https://freely--server.herokuapp.com/API/\",\n    withCredentials: true,\n    timeout: 4000\n});\n","import api from \"../config/api\";\n\nexport async function registerUser(userData) {\n  try {\n      const response = await api.post(\"/auth/register\", userData)\n      return response.data\n  }\n  catch (error) {\n      console.log(\"Error registering user:\", error)\n      throw(error)\n\n  }\n}\n\nexport async function loginUser(userData) {\n  try {\n    const response = await api.post(\"auth/login\", userData)\n    return response.data\n  }\n  catch (error) {\n    console.log(\"Login Error: \", error)\n    throw(error)\n  }\n}\n\nexport async function logoutUser() {\n  try {\n      return api.get(\"/auth/logout\")\n  }\n  catch (error) {\n      console.log(\"Logout Error:\", error)\n      throw(error)\n  }\n}\n\nexport async function userAuthenticated() {\n  try {\n      const response =  await api.get(\"/auth/user\")\n      return response\n  }\n  catch(error) {\n      console.log(\"Error checking for authenticated user\")\n      throw(error)\n  }\n}\n\nexport function getLoggedInUser() {\n  return localStorage.getItem(\"loggedInUser\")\n}\n\nexport function setLoggedInUser(user) {\n  user ? localStorage.setItem(\"loggedInUser\", user) : localStorage.removeItem(\"loggedInUser\")\n}\n","import React, { useState } from \"react\"\nimport { useGlobalState } from \"../../config/store\"\nimport { loginUser, setLoggedInUser } from \"../../services/auth_services\"\nimport { MDBInput, MDBBtn, MDBModal, MDBModalHeader, MDBModalBody, MDBModalFooter, MDBAlert } from \"mdbreact\"\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({showLogin, setShowLogin, setActivities, setStudents}) => {\n\n\tconst { dispatch } = useGlobalState();\n\tconst [loginError, setLoginError] = useState(\"\");\n\tconst history = useHistory();\n\n\tconst hideModal = () => {\n\t\tsetLoginError(\"\");\n\t\tsetShowLogin(false);\n\t}\n\n\tfunction handleLogin(event) {\n\t\tevent.preventDefault()\n\t\tconst form = event.target\n\n\t\tloginUser({username: form.username.value, password: form.password.value}).then((response) => {\n\t\t\tsetActivities(response.activities);\n\t\t\tsetStudents(response.students);\n\t\t\tdispatch({type: \"setLoggedInUser\", data: response.username});\n\t\t\tsetLoggedInUser(response.username);\n\t\t\thideModal();\n\t\t\thistory.push(\"/activities\");\n\t\t}).catch((error) => {\n\t\t\tconsole.log(`An error occurred authenticating: ${error} with status:`)\n\t\t\tsetLoginError(\"There was an error logging in. Please check your credentials and try again.\")\n\t\t})\n\t}\n\n\treturn (\n\t\t<MDBModal toggle={hideModal} isOpen={showLogin}>\n\t\t\t<MDBModalHeader toggle={hideModal}>Login</MDBModalHeader>\n\t\t\t<MDBModalBody>\n\t\t\t\t{loginError && <MDBAlert color=\"danger\">{loginError}</MDBAlert>}\n\t\t\t\t<form id=\"form\" onSubmit={handleLogin}>\n\t\t\t\t\t<MDBInput icon=\"user\" size=\"sm\" name=\"username\" label=\"username\" required  data-cy={'username'} />\n\t\t\t\t\t<MDBInput icon=\"lock\" size=\"sm\" name=\"password\" type=\"password\" label=\"password\" required data-cy={'password'} />\n\t\t\t\t</form>\n\t\t\t</MDBModalBody>\n\t\t\t<MDBModalFooter>\n\t\t\t\t<MDBBtn color=\"secondary\" onClick={hideModal}>Cancel</MDBBtn>\n\t\t\t\t<MDBBtn form=\"form\" type=\"submit\" color=\"primary\" data-cy={'login-button'}>Login</MDBBtn>\n\t\t\t</MDBModalFooter>\n\t\t</MDBModal>\n\t)\n}\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { MDBModal, MDBModalHeader, MDBModalBody, MDBAlert, MDBModalFooter, MDBInput, MDBBtn } from \"mdbreact\";\nimport { registerUser } from \"../../services/auth_services\";\n\nexport default ({showRegister, setShowRegister}) => {\n\n    const history = useHistory();\n    const [registrationError, setRegistrationError] = useState(\"\");\n\n    const hideModal = () => {\n        setRegistrationError(\"\");\n        setShowRegister(false);\n    }\n\n\tconst register = (event) => {\n        event.preventDefault();\n        const form = event.target;\n\n        if (form.password.value !== form.confirm.value) {\n            return setRegistrationError(\"Passwords do not match.\");\n        }\n\n        registerUser({\n            username: form.username.value,\n            password: form.password.value\n        }).then((response) => {\n            console.log(response);\n            hideModal();\n            history.push(\"/\");\n        }).catch(error => {\n            console.log(\"An error occurred during registration:\", error);\n            setRegistrationError(\"There was an error registering your account. Please check required fields and try again.\");\n        });\n    }\n\n    return (\n\t\t<MDBModal toggle={hideModal} isOpen={showRegister}>\n\t\t\t<MDBModalHeader toggle={hideModal}>Register</MDBModalHeader>\n\t\t\t<MDBModalBody>\n\t\t\t\t{registrationError && <MDBAlert color=\"danger\">{registrationError}</MDBAlert>}\n\t\t\t\t<form id=\"form\" onSubmit={register}>\n\t\t\t\t\t<MDBInput icon=\"user\" size=\"sm\" name=\"username\" label=\"username\" required data-cy={'username'} />\n\t\t\t\t\t<MDBInput icon=\"lock\" size=\"sm\" name=\"password\" type=\"password\" label=\"password\" required data-cy={'password1'} />\n                    <MDBInput icon=\"lock\" size=\"sm\" name=\"confirm\" type=\"password\" label=\"confirm password\" required data-cy={'password2'} />\n\t\t\t\t</form>\n\t\t\t</MDBModalBody>\n\t\t\t<MDBModalFooter>\n\t\t\t\t<MDBBtn color=\"secondary\" onClick={hideModal}>Cancel</MDBBtn>\n\t\t\t\t<MDBBtn id=\"submit-btn\" form=\"form\" type=\"submit\" color=\"primary\" data-cy={'register-button'}>Register</MDBBtn>\n\t\t\t</MDBModalFooter>\n\t\t</MDBModal>\n\t)\n}\n","import React from \"react\"\nimport {useGlobalState} from \"../../config/store\"\nimport { logoutUser, setLoggedInUser } from \"../../services/auth_services\"\nimport { MDBBtn, MDBModal, MDBModalHeader, MDBModalBody, MDBModalFooter } from \"mdbreact\"\n\nexport default ({showLogout, setShowLogout}) => {\n\n\tconst { dispatch } = useGlobalState();\n\n\tconst hideModal = () => {\n\t\tsetShowLogout(false);\n\t}\n\n\tfunction logout() {\n\t\tlogoutUser();\n\t\tdispatch({type: \"setLoggedInUser\", data: null});\n        setLoggedInUser(null);\n\t}\n\n\treturn (\n\t\t<MDBModal toggle={hideModal} isOpen={showLogout}>\n\t\t\t<MDBModalHeader toggle={hideModal}>Logout</MDBModalHeader>\n\t\t\t<MDBModalBody>\n\t\t\t\tAre you sure you want to end your session?\n\t\t\t</MDBModalBody>\n\t\t\t<MDBModalFooter>\n\t\t\t\t<MDBBtn color=\"secondary\" onClick={hideModal}>Cancel</MDBBtn>\n\t\t\t\t<MDBBtn color=\"primary\" onClick={() => {hideModal(); logout()}}  data-cy='logout-button'>Logout</MDBBtn>\n\t\t\t</MDBModalFooter>\n\t\t</MDBModal>\n\t)\n}\n","import React, { Fragment, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarToggler, MDBCollapse, MDBNavbarNav, MDBNavItem, MDBNavLink } from \"mdbreact\";\nimport Login from \"../auth/Login\";\nimport Register from \"../auth/Register\";\nimport Logout from \"../auth/Logout\";\nimport { useGlobalState } from \"../../config/store\";\n\nexport default ({ setActivities, setStudents }) => {\n\n    const history = useHistory();\n\n    const [isOpen, setIsOpen] = useState(false);\n    const [showLogin, setShowLogin] = useState(false);\n    const [showLogout, setShowLogout] = useState(false);\n    const [showRegister, setShowRegister] = useState(false);\n\n    const { store } = useGlobalState()\n    const { loggedInUser } = store\n\n    const pageTitle = () => {\n        switch (history.location.pathname) {\n            case \"/activities\": return \"Activities\";\n            case \"/students\": return \"Student Setup\";\n            case \"/landing\": return \"Landing\";\n            default: return \"\";\n        }\n    }\n\n    function navLoggedIn() {\n        return (\n            <Fragment>\n                <MDBNavbarNav left>\n                    {pageTitle() !== \"Activities\" &&\n                        <MDBNavItem>\n                            <MDBNavLink style={{ color: \"white\" }} to=\"/activities\"\n                                onClick={() => { setIsOpen(false); }} data-cy='header-activities'> Activities</MDBNavLink>\n                        </MDBNavItem>\n                    }\n                    {pageTitle() !== \"Student Setup\" &&\n                        <MDBNavItem>\n                            <MDBNavLink style={{ color: \"white\" }} to=\"/students\"\n                                onClick={() => { setIsOpen(false); }} data-cy='header-students'>Student Setup</MDBNavLink>\n                        </MDBNavItem>\n                    }\n                </MDBNavbarNav>\n                <MDBNavbarNav right>\n                    <MDBNavItem>\n                        <MDBNavLink style={{ color: \"white\" }} to=\"#\"\n                            onClick={() => { setIsOpen(false); setShowLogout(true) }} data-cy={'logout'}>Log out</MDBNavLink>\n                    </MDBNavItem>\n                </MDBNavbarNav>\n            </Fragment>\n        )\n    }\n\n    function navLoggedOut() {\n        return (\n            <Fragment>\n                <MDBNavbarNav right>\n                    <MDBNavItem>\n                        <MDBNavLink style={{ color: \"white\" }} to=\"#\"\n                            onClick={() => { setIsOpen(false); setShowLogin(true) }} data-cy={'login'} >Log in</MDBNavLink>\n                    </MDBNavItem>\n                    <MDBNavItem>\n                        <MDBNavLink style={{ color: \"white\" }} to=\"#\"\n                            onClick={() => { setIsOpen(false); setShowRegister(true) }} data-cy={'register'} >Register</MDBNavLink>\n                    </MDBNavItem>\n                </MDBNavbarNav>\n            </Fragment>\n        )\n    }\n\n    return (\n        <MDBNavbar style={{ backgroundColor: \"#612F41\" }} light expand=\"md\">\n            <MDBNavbarBrand style={{ color: \"white\" }} center=\"true\">{loggedInUser ? pageTitle() : \"Freely\"}</MDBNavbarBrand>\n            <MDBNavbarToggler onClick={() => setIsOpen(!isOpen)} />\n\n            <MDBCollapse isOpen={isOpen} navbar>\n                {loggedInUser ? navLoggedIn() : navLoggedOut()}\n            </MDBCollapse>\n\n            <Login showLogin={showLogin} setShowLogin={setShowLogin} setActivities={setActivities} setStudents={setStudents} />\n            <Register showRegister={showRegister} setShowRegister={setShowRegister} />\n            <Logout showLogout={showLogout} setShowLogout={setShowLogout} />\n        </MDBNavbar>\n    )\n}\n","import api from \"../config/api\";\n\nexport const getAllActivities = async () => {\n    try {\n        return await api.get(\"activities/getActivitiesByUser\");\n    }\n    catch (error) {\n        console.log(error);\n        throw(error);\n    }\n}\n\nexport const submitNewActivity = async (data) => {\n    try {\n        return await api.post(\"activities/createActivity\", data);\n    }\n    catch (error) {\n        console.log(error);\n        throw(error);\n    }\n}\n\nexport const deleteActivity = async (data) => {\n    try {\n        return await api.delete(\"activities/deleteActivity\", { data: data });\n    }\n    catch (error) {\n        console.log(error);\n        throw (error);\n    }\n}\n","import React, { useState } from 'react';\nimport { MDBCard, MDBCardBody, MDBCardText, MDBCollapse, MDBIcon, MDBBadge, MDBListGroup, MDBListGroupItem } from 'mdbreact';\nimport { deleteActivity } from '../../services/activity_services';\n\nexport default ({ data, activities, setActivities, students }) => {\n\n    const [assetListOpen, setAssetListOpen] = useState(false);\n\n    const date = () => {\n        const date = new Date(data.date);\n        return <MDBCardText>{`${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`}</MDBCardText>\n    }\n\n    const expandAssetList = () => {\n        if (data.assets.length > 0) {\n            return (\n                <div onClick={() => { setAssetListOpen(!assetListOpen) }} style={{ display: \"flex\", alignItems: \"center\" }}>\n                    <MDBIcon size=\"sm\" icon={!assetListOpen ? \"angle-right\" : \"angle-down\"} />\n                    <MDBCardText style={{ marginLeft: \"10px\" }}>Assets ({data.assets.length})</MDBCardText>\n                </div>\n            )\n        }\n        else {\n            return <p style={{ color: \"#B0B0B0\", fontSize: \"0.8em\", marginBottom: \"0px\" }}><i>No attachments</i></p>\n        }\n    }\n\n    const assetList = () => {\n        return (\n            <MDBCollapse isOpen={assetListOpen}>\n                <MDBListGroup>\n                    {data.assets.map((asset, i) => {\n                        return <MDBListGroupItem key={i}><a href={asset} target=\"_blank\" rel=\"noopener noreferrer\">{asset}</a>\n                        </MDBListGroupItem>\n                    })}\n                </MDBListGroup>\n            </MDBCollapse>\n        )\n    }\n\n    const displayStudents = () => {\n        return (\n            <div style={{display: \"flex\", flexWrap: \"wrap\", justifyContent: \"flex-end\", alignItems: \"flex-end\"}}>\n                {data.students.map((student_id, i) => {\n                    let studentRecord = students.find(student => student._id === student_id);\n                    if (studentRecord) {\n                        return <MDBBadge\n                            pill\n                            key={i}\n                            className=\"student-pill\"\n                            color={studentRecord.color}\n                            style={{ backgroundColor: `${studentRecord.color}` }}>{studentRecord.name}\n                        </MDBBadge>\n                    }\n                    else return false;\n                })}\n            </div>\n        )\n    }\n\n    const removeActivity = () => {\n        deleteActivity({ deleteId: data._id }).then(() => {\n            setActivities(activities.filter(activity => activity._id !== data._id));\n        }).catch(error => {\n            console.log(\"Error:\", error)\n        });\n    }\n\n    return (\n        <MDBCard className=\"cy-activity\">\n            <MDBCardBody style={{display: \"flex\"}}>\n                <div style={{ width: \"70%\" }}>\n                    {data.name && <MDBCardText>{data.name}</MDBCardText>}\n                    <MDBCardText>{data.textContent}</MDBCardText>\n                    {data.date && date()}\n                    {expandAssetList()}\n                    {assetList()}\n                </div>\n                <div style={{width: \"30%\", display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\"}}>\n                    {displayStudents()}\n                    <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\", width: \"100%\" }}>\n                        <MDBIcon className=\"cy-delete-activity click-action\" size=\"md\" icon=\"trash\" onClick={removeActivity} />\n                    </div>\n                </div>\n            </MDBCardBody>\n        </MDBCard>\n    )\n}\n","import React, { Fragment } from 'react';\nimport { MDBIcon, MDBBtn, MDBInput, MDBModal, MDBModalHeader, MDBModalBody, MDBModalFooter, MDBListGroup, MDBListGroupItem } from 'mdbreact';\nimport { submitNewActivity as addNewActivity } from '../../services/activity_services';\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport { useState } from 'react';\n\nexport default ({ activities, isOpen, setShowNewActivityModal, students, setActivities }) => {\n\n    const [assets, setAssets] = useState([]);\n    const [studentsToInclude, setStudentsToInclude] = useState([]);\n\n    const hideModal = () => {\n        setAssets([]);\n        setStudentsToInclude([]);\n        setShowNewActivityModal(false);\n    }\n\n    const submitNewActivity = (event) => {\n        event.preventDefault();\n\n        const form = event.target;\n        const data = {\n            name: \"\",\n            textContent: form.details.value,\n            date: form.date.value || null,\n            completed: false,\n            students: studentsToInclude.map(student => student._id),\n            assets: assets\n        }\n\n        addNewActivity(data).then((response) => {\n            setActivities([...activities, response.data.data]);\n            hideModal();\n        }).catch(error => {\n            console.log(\"An error occurred during submission:\", error);\n        });\n    }\n\n    const date = () => {\n        return (\n            <Fragment>\n                <h4 style={{ marginTop: \"30px\" }}>Date</h4>\n                <MDBInput name=\"date\" type=\"date\"  data-cy={'new-activity-date'}/>\n            </Fragment>\n        )\n    }\n\n    const studentSelector = () => {\n        return (\n            <Fragment>\n                <h4 style={{ marginTop: \"30px\" }}>Students</h4>\n                <Multiselect\n                    onSelect={(value) => setStudentsToInclude(value)}\n                    onRemove={(value) => setStudentsToInclude(value)}\n                    options={students}\n                    displayValue=\"name\"\n                    style={{ searchBox: { border: \"none\", borderBottom: \"1px solid #D0D0D0\", borderRadius: \"0px\" } }} />\n            </Fragment>\n        )\n    }\n\n    const details = () => {\n        return (\n            <Fragment>\n                <h4>Details</h4>\n                <MDBInput required name=\"details\" type=\"textarea\" label=\"Enter your text here...\" data-cy={'new-activity-details'}></MDBInput>\n            </Fragment>\n        )\n    }\n\n    const addAssets = () => {\n        return (\n            <Fragment>\n                <h4 style={{ marginTop: \"30px\" }}>Assets</h4>\n                <MDBListGroup>\n                    {assets.map((asset, i) => {\n                        return <MDBListGroupItem value={i} key={i} style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\" }}>{asset}\n                            <MDBIcon icon=\"backspace\" className=\"click-action\" onClick={(event) => {\n                                setAssets(assets.filter((_ass, i) => i !== event.target.parentNode.value));\n                            }} />\n                        </MDBListGroupItem>\n                    })}\n                </MDBListGroup>\n                <MDBInput icon=\"save\" iconSize=\"sm\" id=\"new-asset\" type=\"url\" label=\"Add new asset link\" onIconClick={() => {\n                    const assetInput = document.getElementById(\"new-asset\");\n                    if (assetInput.value) {\n                        setAssets([...assets, assetInput.value]);\n                        assetInput.value = \"\";\n                    }\n                }\n                } />\n            </Fragment>\n        )\n    }\n\n    return (\n        <MDBModal fullHeight position=\"left\" isOpen={isOpen}>\n            <MDBModalHeader\n                toggle={hideModal}\n                style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>New Activity\n            </MDBModalHeader>\n\n            <MDBModalBody>\n                <form id=\"form\" onSubmit={submitNewActivity}>\n                <br />\n                    {details()}\n                    {date()}\n                    {studentSelector()}\n                    {addAssets()}\n                </form>\n            </MDBModalBody>\n            <MDBModalFooter>\n                <MDBBtn form=\"form\" onClick={hideModal} color=\"secondary\">Cancel</MDBBtn>\n                <MDBBtn form=\"form\" type=\"submit\" color=\"primary\" data-cy={'new-activity-done'}>Done</MDBBtn>\n            </MDBModalFooter>\n        </MDBModal>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport {MDBContainer, MDBBtn, MDBIcon, MDBAlert, MDBInput} from 'mdbreact';\nimport Activity from './Activity';\nimport NewActivity from './NewActivity';\nimport { getAllActivities } from '../../services/activity_services';\nimport { Multiselect } from 'multiselect-react-dropdown';\n\nexport default ({ activities, setActivities, students }) => {\n\n    // TODO add assets\n    // TODO add completion\n\n    const [showNewActivityModal, setShowNewActivityModal] = useState(false);\n    const [customDateFrom, setCustomDateFrom] = useState(null);\n    const [customDateTo, setCustomDateTo] = useState(null);\n    const [selectedStudent, setSelectedStudent] = useState([]);\n\n    // Search field manipulation\n    const filterActivitiesByToday = () => {\n        const today = new Date();\n        return activities.filter(activity => {\n            const date = new Date(activity.date);\n            return date.getDate() === today.getDate() &&\n                date.getMonth() === today.getMonth() &&\n                date.getFullYear() === today.getFullYear();\n        });\n    }\n\n    const filterActivitiesByThisWeek = () => {\n        const today = new Date();\n        return activities.filter(activity => {\n            const date = new Date(activity.date);\n            return date.getDate() >= today.getDate() &&\n                date.getDate() < today.getDate() + 7 &&\n                date.getMonth() === today.getMonth() &&\n                date.getFullYear() === today.getFullYear();\n        });\n    }\n\n    const filterActivitiesByUnscheduled = () => {\n        return activities.filter(activity => !activity.date);\n    }\n\n    const filterActivitiesByCustomDate = () => {\n        if (customDateFrom && customDateTo) {\n            return activities.filter(activity => {\n                const date = new Date(activity.date);\n                return date >= customDateFrom && date <= customDateTo;\n            });\n        }\n        else {\n            return [];\n        }\n    }\n\n    // Elements\n    const [showCustomDateSelection, setShowCustomDateSelection] = useState(false);\n    const [filterMethod, setFilterMethod] = useState(\"today\");\n\n    const studentPicker = () => {\n        let selectableStudentList = [{ name: \"All students\" }, ...students]\n        return (\n            <div style={{\n                padding: \"30px 30% 0px 30%\",\n            }}>\n                <Multiselect\n                    placeholder=\"Select student\"\n                    singleSelect={true}\n                    onSelect={(value) => setSelectedStudent(value)}\n                    onRemove={(value) => setSelectedStudent(value)}\n                    options={selectableStudentList}\n                    displayValue=\"name\"\n                    style={{\n                        chips: {\n                            fontSize: \"1rem\",\n                            margin: \"0px\"\n                        },\n                        searchBox: {\n                            margin: \"20px auto 40px auto\",\n                            border: \"none\", borderBottom: \"1px solid #D0D0D0\",\n                            borderRadius: \"0px\"\n                        }\n                    }} />\n            </div>\n        )\n    }\n\n    const activityDateRange = () => {\n        return (\n            <div style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\", marginTop: \"10px\" }}>\n                <MDBBtn color=\"primary\"\n                    onClick={() => {\n                        setFilterMethod(\"today\");\n                        setShowCustomDateSelection(false);\n                    }}>Today\n                </MDBBtn>\n                <MDBBtn color=\"primary\"\n                    onClick={() => {\n                        setFilterMethod(\"week\");\n                        setShowCustomDateSelection(false);\n                    }}>Next 7 Days\n                </MDBBtn>\n                <MDBBtn color=\"primary\"\n                    onClick={() => {\n                        setFilterMethod(\"unscheduled\");\n                        setShowCustomDateSelection(false);\n                    }}>Unscheduled\n                </MDBBtn>\n                <MDBBtn color=\"primary\"\n                    onClick={() => {\n                        setFilterMethod(\"custom\");\n                        setCustomDateFrom(null);\n                        setCustomDateTo(null);\n                        setShowCustomDateSelection(true);\n                    }} data-cy='activity-date-button'><MDBIcon icon=\"search\" />\n                </MDBBtn>\n            </div>\n        )\n    }\n\n    const showActivities = () => {\n        let activitiesMatchingCriteria = [];\n\n        switch (filterMethod) {\n            case \"today\": activitiesMatchingCriteria = filterActivitiesByToday(); break;\n            case \"week\": activitiesMatchingCriteria = filterActivitiesByThisWeek(); break;\n            case \"unscheduled\": activitiesMatchingCriteria = filterActivitiesByUnscheduled(); break;\n            case \"custom\": activitiesMatchingCriteria = filterActivitiesByCustomDate(); break;\n            default: activitiesMatchingCriteria = []; break;\n        }\n\n        if (selectedStudent.length > 0 && selectedStudent[0].name !== \"All students\") {\n            activitiesMatchingCriteria = activitiesMatchingCriteria.filter(activity => {\n                return activity.students.indexOf(selectedStudent[0]._id) > -1\n            })\n        }\n\n        return (\n            <MDBContainer style={{marginTop: \"30px\", marginBottom: \"30px\"}}>\n                {activitiesMatchingCriteria.length === 0 &&\n                    <MDBAlert color=\"info\">No activities match the search criteria</MDBAlert>\n                }\n                {activitiesMatchingCriteria.map((activity, i) =>\n                    <Activity key={i} students={students} data={activity} activities={activities} setActivities={setActivities} />\n                )}\n            </MDBContainer>\n        )\n    }\n\n    const newActivityButton = () => {\n        return (\n            <MDBBtn\n                color=\"primary\"\n                onClick={() => setShowNewActivityModal(true)}\n                style={{\n                    position: \"fixed\",\n                    bottom: \"20px\",\n                    left: \"calc(50% - 1.5em)\",\n                    borderRadius: \"50%\",\n                    padding: \"0px\",\n                    width: \"3em\",\n                    height: \"3em\"\n                }} data-cy='create-activity'>\n                <MDBIcon icon=\"plus\" />\n            </MDBBtn>\n        )\n    }\n\n    const customDateSelection = () => {\n        return (\n            <div>\n                <form style={{ display: \"flex\", justifyContent: \"space-around\", padding: \"30px 25% 0px\" }}>\n                    <MDBInput type=\"date\" name=\"from\" label=\"From\" onChange={(event) => setCustomDateFrom(new Date(event.target.value))}  data-cy='activity-date-from'/>\n                    <MDBInput type=\"date\" name=\"to\" label=\"To\" onChange={(event) => setCustomDateTo(new Date(event.target.value))} data-cy='activity-date-to' />\n                </form>\n            </div>\n        )\n    }\n\n    useEffect(() => {\n        getAllActivities()\n            .then((response) => setActivities(response.data))\n            .catch((error) => console.log(error))\n    }, [setActivities]);\n\n    return (\n        <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"flex-start\", marginBottom: \"60px\" }}>\n            {studentPicker()}\n            {activityDateRange()}\n            {showCustomDateSelection && customDateSelection()}\n            {showActivities()}\n            {newActivityButton()}\n            <NewActivity\n                setActivities={setActivities}\n                activities={activities}\n                isOpen={showNewActivityModal}\n                setShowNewActivityModal={setShowNewActivityModal}\n                students={students} />\n        </div>\n    )\n}\n","import api from \"../config/api\";\n\nexport const getStudents = async () => {\n  try {\n    return await api.get(\"students/getStudents\");\n  }\n  catch (error) {\n    console.log(error);\n    throw(error);\n  }\n}\n\nexport const addStudent = async (data) => {\n  try {\n    return await api.post(\"students/newStudent\", data);\n  }\n  catch (error) {\n    console.log(error);\n    throw(error);\n  }\n}\n\nexport const deleteStudent = async (studentId) => {\n  try {\n    return await api.delete(\"students/deleteStudent\", { data: studentId });\n  }\n  catch (error) {\n    console.log(error);\n    throw(error);\n  }\n}\n","import React from 'react';\nimport { MDBCard, MDBIcon, MDBCardBody } from 'mdbreact';\nimport { deleteStudent } from '../../services/student_services';\n\nexport default ({data: student, students, setStudents}) => {\n\n    function removeStudent(event) {\n        event.preventDefault();\n        deleteStudent({deleteId: student._id}).then((response) => {\n            setStudents(students.filter(st => st._id !== student._id));\n        }).catch(error => {\n            console.log(\"An error occurred trying to delete \", student.name, \": \", error);\n        })\n    }\n\n    return (\n        <MDBCard style={{marginBottom: \"6px\"}}>\n            <MDBCardBody>\n                <div style={{display: \"flex\", alignItems: \"center\"}}>\n                    <MDBIcon size=\"lg\" icon=\"user\" />\n                    <p style={{marginLeft: \"10px\", minWidth: \"20%\", marginBottom: \"0px\"}}>{student.name}</p>\n                    <MDBIcon size=\"sm\" style={{marginLeft: \"15px\"}} icon=\"pen\" />\n                </div>\n                <div style={{display: \"flex\", alignItems: \"center\", marginTop: \"30px\"}}>\n                    <input\n                        readOnly\n                        type=\"color\"\n                        value={student.color}\n                        onChange={console.log(\"todo: change color\")}\n                        style={{maxWidth: \"30px\", height: \"30px\", padding: \"0px\", marginBottom: \"0px\", border: \"none\"}} />\n                    <p style={{marginLeft: \"10px\", marginBottom: \"0px\"}}>Color</p>\n                    <div style={{display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\", width: \"100%\"}}>\n                        <a href=\"#!\" style={{marginBottom: \"0px\", marginRight: \"10px\"}}>View activities</a>\n                        <MDBIcon\n                            size=\"lg\"\n                            gradient=\"red\"\n                            className=\"click-action\"\n                            onClick={removeStudent}\n                            icon=\"trash\" />\n                    </div>\n                </div>\n            </MDBCardBody>\n        </MDBCard>\n    )\n}\n","import React from 'react';\nimport { MDBCard, MDBIcon, MDBBtn, MDBCardBody } from 'mdbreact';\nimport { useHistory } from 'react-router-dom';\nimport {addStudent} from '../../services/student_services';\n\nexport default ({students}) => {\n    const history = useHistory();\n\n    const submitNewStudent = (event) => {\n        event.preventDefault();\n\n        const form = event.target;\n        const data = {\n            name: form.name.value,\n            color: form.color.value\n        }\n        addStudent(data).then((response) => {\n            students.push(data)\n            history.push(\"/students\");\n            document.getElementById(\"form\").reset()\n\n        }).catch(error =>{\n            console.log(\"An error occured during student submission:\", error);\n        });\n    }\n\n    return (\n        <MDBCard>\n            <MDBCardBody>\n                <form id=\"form\" onSubmit={submitNewStudent}>\n                <div style={{display: \"flex\", alignItems: \"center\"}}>\n                    <MDBIcon size=\"lg\" icon=\"user\" style={{marginRight: \"10px\"}} />\n                    <input name=\"name\" placeholder=\"Enter name\" style={{minWidth: \"20%\", marginBottom: \"0px\"}} data-cy={\"new-student-name\"}/>\n                </div>\n                <div style={{display: \"flex\", alignItems: \"center\", marginTop: \"30px\"}}>\n                    <input name=\"color\" type=\"color\"  style={{maxWidth: \"30px\", height: \"30px\", padding: \"0px\", marginBottom: \"0px\", border: \"none\"}} data-cy={\"new-student-color\"}/>\n                    <p style={{marginLeft: \"10px\", marginBottom: \"0px\"}}>Color</p>\n                </div>\n\n                <MDBBtn type=\"submit\" color=\"primary\" style={{position: \"absolute\", right: \"20px\", bottom: \"20px\", borderRadius: \"50%\", padding: \"0px\", width: \"3em\", height: \"3em\", margin: \"0px\"}} data-cy={\"new-student-button\"}>\n                    <MDBIcon icon=\"plus\" />\n                </MDBBtn>\n                </form>\n            </MDBCardBody>\n        </MDBCard>\n    )\n}\n","import React from \"react\";\nimport { MDBContainer, MDBAlert } from \"mdbreact\";\nimport StudentCard from \"./StudentCard\";\nimport AddStudentCard from \"./AddStudentCard\";\n\nexport default ({ students: data, setStudents }) => {\n\n    const students = () => {\n        return (\n            <MDBContainer>\n                {data.length === 0 && <MDBAlert color=\"info\">Add a student</MDBAlert>}\n                {data.map((student, i) => <StudentCard key={i} data={student} students={data} setStudents={setStudents} />)}\n            </MDBContainer>\n        )\n    }\n\n    return (\n        <MDBContainer style={{marginTop: \"30px\", marginBottom: \"30px\"}}>\n            {students()}\n            <AddStudentCard students={data} />\n        </MDBContainer>\n    )\n}\n","import React from 'react';\n\nexport default () => {\n    return (\n        <iframe\n            title=\"external-homepage\"\n            style={{ border: \"none\", width: \"100%\", height: \"100vh\", marginTop: \"-100px\" }}\n            src=\"https://learnfreely.app/\">\n        </iframe>\n    )\n}\n","export default function (state, action) {\n  switch(action.type) {\n      case \"setLoggedInUser\": {\n          return {\n              ...state,\n          loggedInUser: action.data\n          }\n      }\n\n      default:\n          return state\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import {BrowserRouter, Route, Redirect} from 'react-router-dom';\nimport React, { useState, useReducer, useEffect } from 'react';\n\nimport Header from \"./components/common/Header\";\nimport Activities from \"./components/activities/Activities\";\nimport Students from './components/students/Students';\nimport Landing from './components/common/Landing';\n\nimport { getAllActivities } from './services/activity_services';\nimport { userAuthenticated, setLoggedInUser, getLoggedInUser } from \"./services/auth_services\";\nimport { getStudents } from \"./services/student_services\";\n\nimport stateReducer from \"./config/state_reducer\";\nimport { StateContext } from \"./config/store\";\n\nexport default () => {\n  const [activities, setActivities] = useState([]);\n  const [students, setStudents] = useState([]);\n  const initialState = {loggedInUser: null};\n  const [store, dispatch] = useReducer(stateReducer, initialState);\n\n  useEffect(() => {\n      userAuthenticated().then(() => {\n          dispatch({ type: \"setLoggedInUser\", data: getLoggedInUser() });\n\n          getAllActivities()\n              .then((response) => setActivities(response.data))\n              .catch((error) => console.log(error))\n\n          getStudents()\n              .then((response) => setStudents(response.data))\n              .catch((error) => console.log(error))\n\t}).catch((error) => {\n        console.log(\"got an error trying to check authenticated user:\", error)\n\t\tsetLoggedInUser(null)\n        dispatch({ type: \"setLoggedInUser\", data: null });\n    });\n\treturn () => {}\n  }, []);\n\n  return (\n    <div>\n      <StateContext.Provider value={{store, dispatch}} >\n         <BrowserRouter>\n            <Route path=\"*\" render={() => <Header setActivities={setActivities} setStudents={setStudents} />} />\n            <Route exact path=\"/\" render={() => getLoggedInUser() ? < Redirect to=\"/activities\" /> : <Redirect to=\"/landing\" />} />\n            <Route exact path=\"/activities\" render={() => <Activities activities={activities} students={students} setActivities={setActivities} />} />\n            <Route exact path=\"/students\" render={() => <Students students={students} setStudents={setStudents} />} />\n            <Route exact path=\"/landing\" render={() => <Landing />} />\n            {!getLoggedInUser() && <Route path=\"*\" render={() => <Redirect to=\"/landing\" />} />}\n        </BrowserRouter>\n      </StateContext.Provider>\n    </div>\n  );\n}\n"],"sourceRoot":""}